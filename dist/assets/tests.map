{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-quickstart/tests/lint/app.lint-test.js","ember-quickstart/tests/lint/templates.template.lint-test.js","ember-quickstart/tests/lint/tests.lint-test.js","ember-quickstart/tests/test-helper.js","ember-quickstart/tests/unit/routes/home-test.js","ember-quickstart/tests/unit/routes/home/about-test.js","ember-quickstart/tests/unit/routes/home/mascot-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-quickstart/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/home.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/home/about.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/about.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/home/mascot.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/home/mascot.js should pass ESLint\\n\\n');\n  });\n});","define(\"ember-quickstart/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('ember-quickstart/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-quickstart/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-quickstart/templates/home.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'ember-quickstart/templates/home.hbs should pass TemplateLint.\\n\\nember-quickstart/templates/home.hbs\\n  4:39  error  you must use double quotes in templates  quotes\\n  5:38  error  you must use double quotes in templates  quotes\\n  7:13  error  you must use double quotes in templates  quotes\\n');\n  });\n  QUnit.test('ember-quickstart/templates/home/about.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'ember-quickstart/templates/home/about.hbs should pass TemplateLint.\\n\\nember-quickstart/templates/home/about.hbs\\n  2:11  error  you must use double quotes in templates  quotes\\n  7:11  error  you must use double quotes in templates  quotes\\n');\n  });\n  QUnit.test('ember-quickstart/templates/home/mascot.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'ember-quickstart/templates/home/mascot.hbs should pass TemplateLint.\\n\\nember-quickstart/templates/home/mascot.hbs\\n  3:2  error  Incorrect indentation for `<div>` beginning at L3:C2. Expected `<div>` to be at an indentation of 4 but was found at 2.  block-indentation\\n  4:2  error  Incorrect indentation for `<div>` beginning at L4:C2. Expected `<div>` to be at an indentation of 4 but was found at 2.  block-indentation\\n');\n  });\n  QUnit.test('ember-quickstart/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-quickstart/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"ember-quickstart/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/home-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/home/about-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/about-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/home/mascot-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/mascot-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"ember-quickstart/tests/test-helper\", [\"ember-quickstart/app\", \"ember-quickstart/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"ember-quickstart/tests/unit/routes/home-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | home', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:home');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-quickstart/tests/unit/routes/home/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | home/about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:home/about');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-quickstart/tests/unit/routes/home/mascot-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | home/mascot', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:home/mascot');\n      assert.ok(route);\n    });\n  });\n});","define('ember-quickstart/config/environment', [], function() {\n  var prefix = 'ember-quickstart';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-quickstart/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}